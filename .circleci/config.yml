version: 2.1

executors:
    bittensor-executor:
        docker:
          - image: bittensor/bittensor:latest

orbs:
  python: circleci/python@0.2.1

jobs:
  "Build Bittensor":
    executor: bittensor-executor
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - run:
          command: pip install -e .
          name: setup

  "Run Unit Tests":
    executor: bittensor-executor
    steps:
      - checkout
      - python/load-cache
      - run: pip install codecov pytest
      - run:
          command: pytest ./tests
          name: tests
      - run:
          command: codecov
          name: codecov
    
  "Run GPU Tests":
    machine:
      image: ubuntu-1604-cuda-10.1:201909-23
    steps:
      - checkout
      - python/load-cache
      - run: sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub
      - run: sudo apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub
      - run: echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub
      - run: echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /" > /etc/apt/sources.list.d/cuda.list
      - run: wget https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda-repo-ubuntu1404-8-0-local_8.0.44-1_amd64-deb
      - run: sudo apt update
      - run: 
          name: "Retrieving OS Release"
          command: export os_release="$(uname -r)"
      - run: 
          name: "Installing Linux Headers"
          command: sudo apt-get install -y linux-image-extra-$os_release linux-headers-$os_release linux-image-$os_release
      - run: sudo dpkg -i cuda-repo-ubuntu1404-8-0-local_8.0.44-1_amd64-deb
      - run: sudo apt update
      - run: sudo apt --yes --force-yes install cuda
      - run: nvidia-smi
      #- run: 
      #    name: "Set up Nvidia Repository"
      #    command: curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
      #- run: 
      #    name: "Update repositories"
      #    command: sudo apt update
      #- run: 
       #   name: "Install Nvidia-Docker"
       #   command: sudo apt install -y nvidia-docker2
      #- run: sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub
      #- run: sudo apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub
      #- run: echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub
      #- run: echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /" | sudo tee -a /etc/apt/sources.list.d/cuda.list
      #- run: sudo apt update && sudo apt install -y --no-install-recommends cuda-nvrtc-$CUDA_PKG_VERSION cuda-nvgraph-$CUDA_PKG_VERSION cuda-cusolver-$CUDA_PKG_VERSION cuda-cublas-$CUDA_PKG_VERSION cuda-cufft-$CUDA_PKG_VERSION cuda-curand-$CUDA_PKG_VERSION cuda-cusparse-$CUDA_PKG_VERSION cuda-npp-$CUDA_PKG_VERSION cuda-cudart-$CUDA_PKG_VERSION
      #- run: sudo ln -s cuda-$CUDA_VERSION /usr/local/cuda 
      #- run: sudo rm -rf /var/lib/apt/lists/*
      #- run: echo "/usr/local/cuda/lib64" | sudo tee -a /etc/ld.so.conf.d/cuda.conf && sudo ldconfig
      #- run: echo "/usr/local/nvidia/lib" | sudo tee -a /etc/ld.so.conf.d/nvidia.conf
      #- run: echo "/usr/local/nvidia/lib64" | sudo tee -a /etc/ld.so.conf.d/nvidia.conf
      #- run: echo 'export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}' | tee -a $BASH_ENV
      #- run: sudo apt update && sudo apt install -y --no-install-recommends cuda-core-$CUDA_PKG_VERSION cuda-misc-headers-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION cuda-nvrtc-dev-$CUDA_PKG_VERSION cuda-nvml-dev-$CUDA_PKG_VERSION cuda-nvgraph-dev-$CUDA_PKG_VERSION cuda-cusolver-dev-$CUDA_PKG_VERSION cuda-cublas-dev-$CUDA_PKG_VERSION cuda-cufft-dev-$CUDA_PKG_VERSION cuda-curand-dev-$CUDA_PKG_VERSION cuda-cusparse-dev-$CUDA_PKG_VERSION cuda-npp-dev-$CUDA_PKG_VERSION cuda-cudart-dev-$CUDA_PKG_VERSION cuda-driver-dev-$CUDA_PKG_VERSION   
      #- run

  "Push Production candidate to DockerHub":
    docker:
      - image: circleci/python:3.8.1
        auth: 
           username: $DOCKER_USER
           password: $DOCKERPASS
    steps:
      - checkout
      - python/load-cache
      - setup_remote_docker:
             version: 19.03.13
      - run:
          name: "Docker credentials"
          command: echo $DOCKERPASS | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: "Push production candidate"
          command: ./scripts/push_image.sh

workflows:
  main:
    jobs:
      #- "Build Bittensor"
      #- "Run Unit Tests":
      #        requires:
       #         - "Build Bittensor"
      - "Run GPU Tests"
      #        requires:
      #          - "Build Bittensor"
      #- "Push Production candidate to DockerHub":
      #        requires:
      #          - "Build Bittensor"
      #          - "Run Unit Tests"
      #        filters:
      #          branches:
      #            only:
      #              - master
